import { Meteor } from 'meteor/meteor';

// constant times in seconds
const TEN_MIN = 600.0;
const FIFTEEN_MIN = 900.0;
// constant times in milliseconds
const ONE_HR = 3600000.0;
const TWO_HR = 7200000.0;

Meteor.startup(() => {

  if (Migrations.find({migration: '5'}).count() === 0) {

    console.log("Performing Migration 5 - Adding final scores.");

    let teams = Teams.find({}).fetch();

    /* Iterate through each team */
    _.each(teams, (team) => {
      
      let attempts = PuzzleAttempts.find({teamId: team._id}).fetch();
      let totalScore = 0.0;

      for (let i = 0; i < attempts.length; i++) {
        let attempt = attempts[i];

        // Did this puzzle attempt run over 60 min?
        attempt.overTime = attempt.finalScore === TWO_HR;

        // Set correct finish time at the one hour limit for overtime attempt.
        if (attempt.overTime) {
          attempt.finishTime = new Date(attempt.startTime.getTime() + ONE_HR);
        }

        // Calculate Elapsed Time, Bonus Time, and Penalty Time.
        // All times in seconds here.
        let timeElapsed = (attempt.finishTime - attempt.startTime) / 1000.0;

        // If no hints, and not meta puzzle - calculate bonus time.
        let bonusTime = attempt.hintCount === 0 && attempt.puzzleId !== 'ri4BZ8enkd5x8NgP5' ? FIFTEEN_MIN : 0.0;
        let penaltyTime = attempt.hintCount ? (attempt.hintCount * TEN_MIN) : 0.0;

        // Set final Score based on overTime or not.
        if (attempt.overTime) {
          attempt.finalScore = TWO_HR / 1000.0;
        } else {
          attempt.finalScore = timeElapsed + penaltyTime - bonusTime;
        }

        // Round finalScore to 3 decimal places.
        attempt.finalScore = +(attempt.finalScore.toFixed(3));

        totalScore += attempt.finalScore;
        //console.log(`Team: ${team.name} attempt finalScore: ${attempt.finalScore}`);

        PuzzleAttempts.update({_id: attempt._id}, {$set: attempt});

      }

      // Round totalScore to 3 decimal places.
      totalScore = +(totalScore.toFixed(3));

      // Add finished Flag to team.
      let teamFinished = attempts.length === 5;

      // Update Team.
      Teams.update({_id: team._id}, {$set: {totalScore: totalScore !== 0 ? totalScore : null, finished: teamFinished }});

    });

    console.log(`Migration Done.`);

    Migrations.insert({migration: '5'});
  }

});
